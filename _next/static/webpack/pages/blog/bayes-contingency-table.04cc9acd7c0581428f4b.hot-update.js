webpackHotUpdate_N_E("pages/blog/bayes-contingency-table",{

/***/ "./pages/blog/bayes-contingency-table.tsx":
/*!************************************************!*\
  !*** ./pages/blog/bayes-contingency-table.tsx ***!
  \************************************************/
/*! exports provided: config, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_katex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-katex */ \"./node_modules/react-katex/dist/react-katex.js\");\n/* harmony import */ var react_katex__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_katex__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-syntax-highlighter */ \"./node_modules/react-syntax-highlighter/dist/esm/index.js\");\n/* harmony import */ var react_syntax_highlighter_dist_cjs_languages_hljs_r__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-syntax-highlighter/dist/cjs/languages/hljs/r */ \"./node_modules/react-syntax-highlighter/dist/cjs/languages/hljs/r.js\");\n/* harmony import */ var react_syntax_highlighter_dist_cjs_languages_hljs_r__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_syntax_highlighter_dist_cjs_languages_hljs_r__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_syntax_highlighter_dist_cjs_languages_hljs_stan__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-syntax-highlighter/dist/cjs/languages/hljs/stan */ \"./node_modules/react-syntax-highlighter/dist/cjs/languages/hljs/stan.js\");\n/* harmony import */ var react_syntax_highlighter_dist_cjs_languages_hljs_stan__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_syntax_highlighter_dist_cjs_languages_hljs_stan__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_syntax_highlighter_dist_cjs_languages_hljs_python__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-syntax-highlighter/dist/cjs/languages/hljs/python */ \"./node_modules/react-syntax-highlighter/dist/cjs/languages/hljs/python.js\");\n/* harmony import */ var react_syntax_highlighter_dist_cjs_languages_hljs_python__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_syntax_highlighter_dist_cjs_languages_hljs_python__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-syntax-highlighter/dist/cjs/styles/hljs */ \"./node_modules/react-syntax-highlighter/dist/cjs/styles/hljs/index.js\");\n/* harmony import */ var react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var components_BlogPost__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! components/BlogPost */ \"./components/BlogPost.tsx\");\n/* harmony import */ var components_LatexCss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! components/LatexCss */ \"./components/LatexCss.tsx\");\nvar _this = undefined,\n    _jsxFileName = \"/Users/llwu/git/llwu.github.io/pages/blog/bayes-contingency-table.tsx\";\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;\n\n\n\n\n\n\n\n\n\nvar config = {\n  unstable_runtimeJS: false\n};\nreact_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"].registerLanguage('r', react_syntax_highlighter_dist_cjs_languages_hljs_r__WEBPACK_IMPORTED_MODULE_4___default.a);\nreact_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"].registerLanguage('stan', react_syntax_highlighter_dist_cjs_languages_hljs_stan__WEBPACK_IMPORTED_MODULE_5___default.a);\nreact_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"].registerLanguage('python', react_syntax_highlighter_dist_cjs_languages_hljs_python__WEBPACK_IMPORTED_MODULE_6___default.a);\nvar FLEX = {\n  flex: 1\n};\nvar SCALE_DOWN = {\n  maxHeight: '100%',\n  maxWidth: '100%',\n  objectFit: 'scale-down'\n};\n\nvar BlogPostPage = function BlogPostPage() {\n  return __jsx(components_BlogPost__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    id: \"bayes-contingency-table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(components_LatexCss__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), __jsx(next_head__WEBPACK_IMPORTED_MODULE_1___default.a, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"link\", {\n    rel: \"preload\",\n    href: \"/css/fonts/KaTeX_Math-Italic.woff2\",\n    as: \"font\",\n    type: \"font/woff2\",\n    crossOrigin: \"anonymous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(\"link\", {\n    rel: \"preload\",\n    href: \"/css/fonts/KaTeX_Caligraphic-Regular.woff2\",\n    as: \"font\",\n    type: \"font/woff2\",\n    crossOrigin: \"anonymous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"link\", {\n    rel: \"preload\",\n    href: \"/css/fonts/KaTeX_Size2-Regular.woff2\",\n    as: \"font\",\n    type: \"font/woff2\",\n    crossOrigin: \"anonymous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"link\", {\n    rel: \"preload\",\n    href: \"/css/fonts/KaTeX_Main-Regular.woff2\",\n    as: \"font\",\n    type: \"font/woff2\",\n    crossOrigin: \"anonymous\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })), __jsx(\"h3\", {\n    id: \"toc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"Table of Contents\"), __jsx(\"ol\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"#section1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Uniform Prior over \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"(p_1, p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 50\n    }\n  }))), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"#section2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Bayesian Logistic Regression\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"#section3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Beta Prior over \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p_1 / (p_1 + p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 47\n    }\n  }), \"? (feat. Pfizer)\"))), __jsx(\"h3\", {\n    id: \"section1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    href: \"#toc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"1.\"), \" Uniform Prior on \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"(p_1, p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 62\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"One of the more dubious statistical tests I've come across is\", ' ', __jsx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Fisher%27s_exact_test\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Fisher's exact test\"), \". So I did a quick Google search, and apparently\", ' ', __jsx(\"a\", {\n    href: \"https://statmodeling.stat.columbia.edu/2009/10/13/what_is_the_bay/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Andrew Gelman agrees\"), \". I don't think his suggestion i) (model the 2x2 contingency table with two independent binomial distributions) is generally applicable though. This is because in contingency table applications, I'd want more weight on the \\\"null hypothesis\\\" \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p_1 = p_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }\n  }), \", which would imply non-independence. Indeed, the uniform distribution over\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"[0,1] \\\\times [0,1]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), \" only places 50% likelihood on a risk ratio between 1/2 and 2, and 75% likelihood on an absolute difference of less than .5:\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    key: \"img1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: FLEX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/blog-img/bayes-contingency-table/odds-ratio-uniform.svg\",\n    style: SCALE_DOWN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: FLEX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/blog-img/bayes-contingency-table/odds-diff-uniform.svg\",\n    style: SCALE_DOWN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"Accordingly, \", ' ', __jsx(\"a\", {\n    href: \"https://lingpipe-blog.com/2009/10/13/bayesian-counterpart-to-fisher-exact-test-on-contingency-tables/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Bob Carpenter's blog post\"), ' ', \"using this prior is quite generous, placing over 90% likelihood on men having a higher percentage of left-handedness than women given the following toy data from Wikipedia:\"), __jsx(\"table\", {\n    cellPadding: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Left-Handed\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Right-Handed\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Total\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Male\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"9\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"43\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"52\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Female\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"4\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"44\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"48\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Total\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"13\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"87\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"100\"))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"For comparison, Fisher's exact test (note that this is two-tailed - the one-tailed p-value would be 0.1196):\"), __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"r\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"> data = matrix(c(9,4,43,44), nrow=2)\\n> fisher.test(data)\\n\\n\\tFisher's Exact Test for Count Data\\n\\ndata:  data\\np-value = 0.2392\\nalternative hypothesis: true odds ratio is not equal to 1\\n95 percent confidence interval:\\n  0.582996 10.927993\\nsample estimates:\\nodds ratio\\n2.283832\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, \"A frequentist logistic regression (where the p-values are again two-tailed) is somewhat more on par with the uniform prior results:\"), __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"r\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, \"> frequentist_logistic_reg <- glm(formula = cbind(c(9, 4), c(43, 44)) ~ as.factor(c(0.5, -0.5)),\\n                                  family = binomial())\\n> summary(frequentist_logistic_reg)\\n...\\nCoefficients:\\n                           Estimate Std. Error z value Pr(>|z|)\\n(Intercept)                 -2.3979     0.5222  -4.592  4.4e-06 ***\\nas.factor(c(0.5, -0.5))0.5   0.8339     0.6380   1.307    0.191\"), __jsx(\"h3\", {\n    id: \"section2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    href: \"#toc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }\n  }, \"2.\"), \" Bayesian Logistic Regression\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, \"We can actually encode the conservative prior belief that handedness is unlikely to significantly differ between males and females, by making the logit model Bayesian. We place a weakly informative \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\mathcal{N}(0,1)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }), \" prior on the coefficient, which is the log-odds ratio, and simulate the uniform marginals that we had before by using a \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\text{Logistic}(0,1)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 18\n    }\n  }), \" prior on the intercept (in most settings, I'd pick tighter priors, but for this toy data I'm interested in the impact of just the coefficient prior). The marginal and joint priors for \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"(p_1, p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }), \" look like the following (using \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 14\n    }\n  }, \"seaborn.kdeplot\"), \") - note that the marginal isn't perfectly flat, since adding in the coefficient fattens up the distribution of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\operatorname{logit}(p_1)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 10\n    }\n  }), \", but it's close enough:\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    key: \"img2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: FLEX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/blog-img/bayes-contingency-table/marginal-prior.svg\",\n    style: SCALE_DOWN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: FLEX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/blog-img/bayes-contingency-table/joint-prior.png\",\n    style: SCALE_DOWN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, \"In Stan, we can code the model as:\"), __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"stan\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, \"data {\\n  real x1;\\n  real x2;\\n  int<lower=0> y1;\\n  int<lower=0> n1;\\n  int<lower=0> y2;\\n  int<lower=0> n2;\\n}\\nparameters {\\n  real intercept;\\n  real coeff;\\n}\\nmodel {\\n  intercept ~ logistic(0, 1);\\n  coeff ~ normal(0, 1);\\n  y1 ~ binomial_logit(n1, intercept + coeff * x1);\\n  y2 ~ binomial_logit(n2, intercept + coeff * x2);\\n}\"), \"And we can run the model on our toy data in \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 49\n    }\n  }, \"rstan\"), \":\", __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"r\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, \"> stan_dat = list(x1 = -0.5, x2 = 0.5, y1 = 4, n1 = 48, y2 = 9, n2 = 52)\\n> stan_fit <- stan(file = \\\"lreg.stan\\\", data = stan_dat, chains=4, cores=2, iter=10000)\\n> samples <- extract(stan_fit, pars=c('intercept', 'coeff'))\\n> summary(samples$intercept)\\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\\n-3.5257 -2.1215 -1.9175 -1.9293 -1.7231 -0.9438\\n> summary(samples$coeff)\\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\\n-1.3620  0.2370  0.5812  0.5880  0.9338  2.9494\\n> mean(samples$coeff < 0)\\n[1] 0.12855\\n> men_logits <- samples$intercept + 0.5 * samples$coeff\\n> women_logits <- samples$intercept - 0.5 * samples$coeff\\n> men_p <- invlogit(men_logits)\\n> women_p <- invlogit(women_logits)\\n> p_diff <- men_p - women_p\\n> quantile(p_diff, c(0.005,0.025,0.5,0.975,0.995))\\n       0.5%        2.5%         50%       97.5%       99.5%\\n-0.08969971 -0.04901461  0.06404981  0.18018982  0.22328685\\n> odds_ratio <- (men_p / (1 - men_p)) / (women_p / (1 - women_p))\\n> quantile(odds_ratio, c(0.005,0.025,0.5,0.975,0.995))\\n     0.5%      2.5%       50%     97.5%     99.5%\\n0.4839859 0.6534247 1.7881112 5.1106308 7.2953805\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, \"Notice the shrinkage, compared to the frequentist version. We can also see that the resulting 12.9% chance of men being less likely to be left-handed is greater than the corresponding one-sided value from the uniform prior inference, the frequentist logit model, and Fisher's exact test. The 95% credible intervals are also more pessimistic: [-0.049, 0.18] for the absolute difference vs [-0.046, 0.218] from the uniform prior inference, and [0.653, 5.111] for the odds ratio vs a confidence interval of [0.583, 10.928] from Fisher's exact test. The tighter the priors, the more pessimistic we will be.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, \"What would you conclude if you saw this data? (Fun fact: there seems to be a fair amount of actual data on handedness on the Internet, and the conclusion seems to be that men are indeed more likely to be left-handed, along with a handful - no pun intended - of other conclusions. I have not reviewed any of the studies, though).\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }\n  }, \"What if we have an \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"m \\\\times n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 26\n    }\n  }), \" contingency table? Then we can do the same analysis using a multinomial logit model (which is just \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n - 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 54\n    }\n  }), \" logits), and dummy variables (\", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"m - 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 28\n    }\n  }), \" of them, to avoid multicollinearity). If we had a meta-analysis of many such tables, we could place a hyperprior over the coefficient priors (a.k.a. hierarchical Bayes).\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, \"Another side note: logistic regression also works on the data from the Wikipedia page on\", ' ', __jsx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Simpson%27s_paradox\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, \"Simpson's paradox\"), \" - in fact, Simpson's paradox can be interpreted as omitted variable bias. Another way to understand omitted variable bias is the\", ' ', __jsx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Frisch%E2%80%93Waugh%E2%80%93Lovell_theorem\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, \"Frisch\\u2013Waugh\\u2013Lovell (FWL) theorem\"), \" - when you partial out other covariates, your causal effect changes.\"), __jsx(\"h3\", {\n    id: \"section3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    href: \"#toc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, \"3.\"), \" Beta Prior over \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p_1 / (p_1 + p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 61\n    }\n  }), \"? (feat. Pfizer)\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, \"So if we look at the\", ' ', __jsx(\"a\", {\n    href: \"https://pfe-pfizercom-d8-prod.s3.amazonaws.com/2020-09/C4591001_Clinical_Protocol.pdf#page=102\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, \"study design\"), ' ', \"for the recent Biontech/Pfizer COVID-19 vaccine results - something interesting jumps out: instead of placing a prior on \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"(p_1, p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }), ' ', \"(where \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p_1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 14\n    }\n  }), \" is the probability that a given patient from the treatment group gets COVID-19, and \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }), \" is the probability that a given patient from the control group gets COVID-19), they place a\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\text{Beta}(0.7, 1)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }), \" prior on\", \" \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\theta = p_1 / (p_1 + p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }), \". But wait! Isn't the model underparameterized now? We had two parameters, and now we have one! Indeed, if \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 18\n    }\n  }), \" out of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 51\n    }\n  }), \" patients from the treatment group get COVID-19 and \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 24\n    }\n  }), \" out of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 57\n    }\n  }), \" patients from the control group get COVID-19, then we don't have a well-defined evidence, as\", __jsx(\"div\", {\n    key: \"tex1\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"BlockMath\"], {\n    math: \" P(y_1, y_2 \\\\mid \\\\theta) = \\\\int_0^1 \\\\operatorname{B}(y_1; n_1, p_1)\\\\operatorname{B}(y_2; n_2, p_1(\\\\dfrac{1}{\\\\theta} - 1))P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\tag{1} \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  })), \"can take multiple relative values for fixed values of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\theta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 61\n    }\n  }), \", by varying the distribution of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p_1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }), \". In other words, we can't technically do Bayesian inference on the contingency table, since we don't take into account the base rate of infection.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, \"So how does the reconstructed experiment in\", ' ', __jsx(\"a\", {\n    href: \"https://skranz.github.io/r/2020/11/11/CovidVaccineBayesian.html\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, \"Kranz's post\"), ' ', \"work? He transforms the problem into a binomial model on the infected patients, assuming \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1 = n_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 16\n    }\n  }), \", i.e.\", __jsx(\"div\", {\n    key: \"tex2\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"BlockMath\"], {\n    math: \"P(y_1, y_2 \\\\mid \\\\theta) = \\\\operatorname{B}(y_1; y_1 + y_2, \\\\theta) \\\\tag{2}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  })), \"so that we can do a simple conjugate prior model. This is a clever transformation, though note that it deviates from reality in the sense that it conditions on \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1 + y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 84\n    }\n  }), \", and in the sense that the binomial distribution models draws with replacement (whereas \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\text{(1)}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 16\n    }\n  }), \" is the expression for draws without replacement). For example, if\", ' ', \"we had \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1 = 100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 14\n    }\n  }), \" and \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1 + y_2 = 150\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 50\n    }\n  }), \", then we would never see \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1 = 125\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 31\n    }\n  }), \" despite that having a nonzero probability in the binomial distribution (notice that \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\text{(2)}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 61\n    }\n  }), ' ', \"doesn't include \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 23\n    }\n  }), \" or \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 52\n    }\n  }), \" at all).\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, \"Fortunately, in the Pfizer trial we have \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1, n_2 \\\\gg y_1, y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 48\n    }\n  }), ' ', \"(\", __jsx(\"a\", {\n    href: \"https://www.npr.org/sections/health-shots/2020/11/09/933006651/pfizer-says-experimental-covid-19-vaccine-is-more-than-90-effective\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 8\n    }\n  }, \"43538 participants vs 94 cases\"), \", to be precise), so we are effectively drawing the infected patients from an infinite population, and the binomial model is probably not too far off. So this could reconcile how the one-parameter model technically isn't well-defined for contingency tables in general, but could still be used to do asymptotically approximate inference in this particular regime. Indeed, if we marginalize over \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1 + y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 38\n    }\n  }), \" and assume that\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1 + y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 12\n    }\n  }), \" is distributed independently of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\theta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 76\n    }\n  }), \":\"), __jsx(\"div\", {\n    key: \"tex3\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }\n  }, __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"BlockMath\"], {\n    math: \" \\\\begin{aligned} P(y_1, y_2 \\\\mid \\\\theta) &= \\\\sum_{i} P(y_1, y_2 \\\\mid y_1 + y_2 = i, \\\\theta)P(y_1 + y_2 = i \\\\mid \\\\theta) \\\\\\\\ &= \\\\sum_{i} \\\\left(\\\\int_0^1 P(p_1 \\\\mid y_1 + y_2 = i, \\\\theta) P(y_1 \\\\mid y_1 + y_2 = i, p_1, p_2) \\\\right)P(y_1 + y_2 = i \\\\mid \\\\theta) \\\\\\\\ \\\\end{aligned} \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  })), \"where \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"P(y_1 \\\\mid y_1 + y_2 = i, p_1, p_2)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }), \" is bounded by\", __jsx(\"div\", {\n    key: \"tex3\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"BlockMath\"], {\n    math: \" \\\\begin{aligned} &\\\\binom{y_1+y_2}{y_1}\\\\left[ \\\\dfrac{(n - y_1 - y_2)^{y_1 + y_2}p_1^{y_1}p_2^{y_2}}{(n(p_1+p_2))^{y_1 + y_2}}, \\\\dfrac{n^{y_1 + y_2}p_1^{y_1}p_2^{y_2}}{((n - y_1 - y_2)(p_1+p_2))^{y_1 + y_2}} \\\\right] \\\\\\\\ =&\\\\binom{y_1+y_2}{y_1}\\\\left(\\\\dfrac{p_1}{p_1 + p_2}\\\\right)^{y_1} \\\\left(\\\\dfrac{p_2}{p_1 + p_2}\\\\right)^{y_2}\\\\left[ \\\\left(1 - \\\\dfrac{y_1 + y_2}{n}\\\\right)^{y_1 + y_2}, \\\\dfrac{n^{y_1 + y_2}p_1^{y_1}p_2^{y_2}}{((n - y_1 - y_2)(p_1+p_2))^{y_1 + y_2}} \\\\right] \\\\\\\\ \\\\end{aligned} \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 5\n    }\n  }, \"You can see this behavior for yourself using toy data (like we did earlier) - just create a contingency table, fix \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1, y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 44\n    }\n  }), \", and vary \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n = n_1 = n_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 16\n    }\n  }), \". The single binomial model always yields the same posterior, but a two binomials or logistic model yields varying results, diverging at small \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 50\n    }\n  }), \" and converging at large \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 27\n    }\n  }), \".\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }, \"This approximation is reminiscent of the\", ' ', __jsx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Poisson_limit_theorem\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, \"law of rare events\"), \", which requires \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1, n_2 \\\\gg p_1, p_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 22\n    }\n  }), \": \\\"There is a rule of thumb stating that the Poisson distribution is a good approximation of the binomial distribution if \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 32\n    }\n  }), \" is at least 20 and \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 75\n    }\n  }), \" is smaller than or equal to 0.05, and an excellent approximation if \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n \\\\ge 100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 72\n    }\n  }), ' ', \"and \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"np \\\\le 10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }), \"\\\". Note that this condition is slightly different than what we can observe, but we can still apply the law of rare events starting with the observed\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"n_1 = n_2 = n \\\\gg y_1, y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }\n  }), \", by noting that the integrand of\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\text{(1)}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }), \" is significant only up to some value\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p = O(y/n)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }\n  }), \", due to the Chernoff bound (assuming also that we have prior density in this area). So we can pick \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\delta(\\\\theta)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 22\n    }\n  }), \" such that:\"), __jsx(\"div\", {\n    key: \"tex4\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }\n  }, __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"BlockMath\"], {\n    math: \" \\\\begin{aligned} P(y_1, y_2 \\\\mid \\\\theta) &= \\\\int_0^1 \\\\operatorname{B}(y_1; n_1, p_1)\\\\operatorname{B}(y_2; n_2, p_1(\\\\dfrac{1}{\\\\theta} - 1))P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &\\\\approx \\\\int_0^{\\\\delta} \\\\operatorname{Pois}(y_1; np_1)\\\\operatorname{Pois}(y_2; np_2)P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &= \\\\int_0^{\\\\delta} \\\\dfrac{(np_1)^{y_1}e^{-np_1}}{y_1!}\\\\dfrac{(np_2)^{y_2}e^{-np_2}}{y_2!}P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &= \\\\int_0^{\\\\delta} \\\\dfrac{p_1^{y_1}p_2^{y_2}}{y_1!y_2!}n^{y_1 + y_2}e^{-n(p_1 + p_2)}P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &= \\\\int_0^{\\\\delta} \\\\dfrac{p_1^{y_1}p_2^{y_2}(y_1 + y_2)!}{y_1!y_2!(p_1 + p_2)^{y_1 + y_2}} \\\\dfrac{(n(p_1 + p_2))^{y_1 + y_2}e^{-n(p_1+p_2)}}{(y_1 + y_2)!}P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &= \\\\int_0^{\\\\delta} \\\\binom{y_1 + y_2}{y_1}\\\\left(\\\\dfrac{p_1}{p_1 + p_2}\\\\right)^{y_1} \\\\left(\\\\dfrac{p_2}{p_1 + p_2}\\\\right)^{y_2}\\\\operatorname{Pois}(y_1 + y_2; n(p_1 + p_2))P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &= \\\\int_0^{\\\\delta} \\\\binom{y_1 + y_2}{y_1}\\\\theta^{y_1}(1 - \\\\theta)^{y_2}\\\\operatorname{Pois}(y_1 + y_2; n(p_1 + p_2))P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &= \\\\operatorname{B}(y_1; y_1 + y_2, \\\\theta) \\\\int_0^{\\\\delta} \\\\operatorname{Pois}(y_1 + y_2; n(p_1 + p_2))P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &\\\\approx \\\\operatorname{B}(y_1; y_1 + y_2, \\\\theta) \\\\int_0^{\\\\delta} \\\\operatorname{B}(y_1 + y_2; n, p_1 + p_2)P(p_1 \\\\mid \\\\theta) \\\\,dp_1 \\\\\\\\ &\\\\approx \\\\operatorname{B}(y_1; y_1 + y_2, \\\\theta) P(y_1 + y_2 \\\\mid \\\\theta) \\\\end{aligned} \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 5\n    }\n  }, \"So now with one final assumption that \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y_1 + y_2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 45\n    }\n  }), \" is distributed independently of \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\theta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 36\n    }\n  }), \", we have derived \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\text{(2)}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 23\n    }\n  }), \" again! Note that the \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"y \\\\ll \\\\sqrt{n}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 21\n    }\n  }), \" requirement pops out again, since the Poisson limit uses the limit for \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"e\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 50\n    }\n  }), \", i.e.\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"(1 - p)^{n - y} \\\\to e^{-np}e^{yp}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }), \" where\", ' ', __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"p = O(y/n)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }\n  }), \" gives us \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"O(e^{y^2/n})\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 49\n    }\n  }), \"relative error.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 5\n    }\n  }, \"Is this bound tight? I'm not sure about how exactly the posterior and credible intervals are affected, but for the pointwise likelihood estimate, I would conjecture that the bound is tight. We'd have to contruct an example in order to show it.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 5\n    }\n  }, \"So, there you have it, another way of (sometimes) analyzing 2x2 contingency tables. Maybe this method of modeling the participants as an infinite population is actually, unbeknownst to me, really commonly used in medical practice, where the stack of assumptions would often be feasible. This is my first time seeing it, and it was quite surprising, though it was cool.\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 5\n    }\n  }, \"That being said, since Bayesian logit models (and any Bayesian model within the reach of MCMC/Variational Inference) are already easy to fit using a computer, and we need less assumptions, there isn't in general a huge practical advantage to using approximation - maybe numerical stability if we need to deal with extremely large counts, or if we want to define an unusually specific prior on \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\theta\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 62\n    }\n  }), \" \", ' ', \"(e.g.\", ' ', __jsx(\"a\", {\n    href: \"http://www.mas.ncl.ac.uk/~nlf8/teaching/mas2317/notes/chapter3.pdf\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }\n  }, \"prior elicitation\"), \" using quantiles or some other method). Just for fun, I'll try my earlier Stan model on some possible contingency tables for the Pfizer trials. This time I'll use fatter-tailed \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"\\\\operatorname{Cauchy}(0,1)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 40\n    }\n  }), \" prior for the coefficient, to reflect the setting. Here is the resulting prior density for vaccine efficacy:\", __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      margin: 'auto',\n      maxWidth: '400px'\n    },\n    key: \"img3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: FLEX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/blog-img/bayes-contingency-table/prior-ve-pdf.svg\",\n    style: SCALE_DOWN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  })))), __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"python\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 5\n    }\n  }, \">>> np.quantile(ve, [0.05,0.90,0.95,0.975,0.99])\\narray([-28.82565825,   0.75722787,   0.93598612,   0.99053768,\\n         0.99953615], dtype=float128)\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 5\n    }\n  }, \"And now, the contingency tables:\"), __jsx(\"table\", {\n    cellPadding: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }\n  }, __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }\n  }), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }\n  }, \"Infected\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }\n  }, \"Uninfected\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }, \"Total\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }\n  }, \"Treatment\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, \"8\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }\n  }, \"21761\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }\n  }, \"21769\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }\n  }, \"Control\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }\n  }, \"86\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }\n  }, \"21683\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, \"21769\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, \"Total\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }\n  }, \"94\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }\n  }, \"43444\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, \"43538\"))), __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"r\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 5\n    }\n  }, \"> stan_dat = list(x1 = -0.5, x2 = 0.5, y1 = 86, n1 = 21769, y2 = 8, n2 = 21769)\\n> stan_fit <- stan(file = \\\"lreg.stan\\\", data = stan_dat, chains=4, cores=2, iter=10000)\\n> samples <- extract(stan_fit, pars=c('intercept', 'coeff'))\\n> treatment_logits <- samples$intercept + 0.5 * samples$coeff\\n> control_logits <- samples$intercept - 0.5 * samples$coeff\\n> treatment_p <- invlogit(treatment_logits)\\n> control_p <- invlogit(control_logits)\\n> ve <- 1 - treatment_p/control_p\\n> quantile(ve1, c(0.005,0.025,0.5,0.975,0.995))\\n     0.5%      2.5%       50%     97.5%     99.5%\\n0.7593659 0.8003920 0.8957004 0.9524886 0.9648558\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }, \"80-95.2% vaccine efficacy - not bad!\"), __jsx(\"table\", {\n    cellPadding: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 5\n    }\n  }, __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, \"Infected\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }\n  }, \"Uninfected\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }, \"Total\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }\n  }, \"Treatment\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }\n  }, \"3\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }\n  }, \"21766\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }\n  }, \"21769\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }\n  }, \"Control\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, \"91\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }\n  }, \"21678\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }\n  }, \"21769\")), __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }\n  }, \"Total\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }, \"94\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, \"43444\"), __jsx(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }\n  }, \"43538\"))), __jsx(react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_3__[\"Light\"], {\n    language: \"r\",\n    style: react_syntax_highlighter_dist_cjs_styles_hljs__WEBPACK_IMPORTED_MODULE_7__[\"docco\"],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 5\n    }\n  }, \"> stan_dat = list(x1 = -0.5, x2 = 0.5, y1 = 91, n1 = 21769, y2 = 3, n2 = 21769)\\n...\\n> quantile(ve, c(0.005,0.025,0.5,0.975,0.995))\\n     0.5%      2.5%       50%     97.5%     99.5%\\n0.8674722 0.8941107 0.9590702 0.9883797 0.9931797\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 5\n    }\n  }, \"89.4-98.8% - even better! Here are the posterior pdf plots for the above two contingency table analyses:\"), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      margin: 'auto',\n      maxWidth: '400px'\n    },\n    key: \"img4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: FLEX,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/blog-img/bayes-contingency-table/ve-pdf.svg\",\n    style: SCALE_DOWN,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 5\n    }\n  }, \"In conclusion, I probably won't be frequenting bars, clubs, and festivals\", ' ', __jsx(\"em\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }\n  }, \"immediately\"), \" after getting vaccinated, but I'll be on the hopeful lookout for a sharp decline in \", __jsx(react_katex__WEBPACK_IMPORTED_MODULE_2__[\"InlineMath\"], {\n    math: \"R_0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 65\n    }\n  }), \" to kick in.\"));\n};\n\n_c = BlogPostPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (BlogPostPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostPage\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/blog/bayes-contingency-table.tsx\n");

/***/ })

})